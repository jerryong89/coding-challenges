Even Odd Partition
Write a function that partitions the array into two subarrays: one with all even integers, and the other with all odd integers. Return your result in the following format:

[[evens], [odds]]
Examples
evenOddPartition([5, 8, 9, 2, 0]) ➞ [[8, 2, 0], [5, 9]]

evenOddPartition([1, 0, 1, 0, 1, 0]) ➞ [[0, 0, 0], [1, 1, 1]]

evenOddPartition([1, 3, 5, 7, 9]) ➞ [[], [1, 3, 5, 7, 9]]

evenOddPartition([]) ➞ [[], []]

My Solution

function evenOddPartition(arr) {
	let result = [];
	for (let h = 0; h < 2; h++){
		result.push([])
	}
	for (let i = 0; i < arr.length; i++){
		if (arr[i] % 2 !== 0){
			result[1].push(arr[i])
		} else result[0].push(arr[i])
	}
	return result
}
